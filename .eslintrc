{
  "extends": [
    // By extending from a plugin config, we can get recommended rules without having to add them manually.
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:react-hooks/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:jsx-a11y/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/stylistic",
    // This disables the formatting rules in ESLint that Prettier is going to be responsible for handling.
    // Make sure it's always the last config, so it gets the chance to override other configs.
    "eslint-config-prettier",
  ],
  "plugins": ["unused-imports"],
  "env": {
    "browser": true,
    "node": true,
  },
  "parserOptions": {
    "project": true,
  },
  "settings": {
    "react": {
      // Tells eslint-plugin-react to automatically detect the version of React to use.
      "version": "detect",
    },
    // Tells eslint how to resolve imports
    "import/resolver": {
      "node": {
        "paths": ["src"],
        "extensions": [".js", ".jsx", ".ts", ".tsx"],
      },
      "typescript": {
        "alwaysTryTypes": true,
      },
    },
  },
  "overrides": [
    {
      "files": ["**/*.tsx", "**/*.ts"],
      "rules": {
        "react/display-name": "off",
        "react/prop-types": "off",
        "react/require-default-props": "off",
        "react/jsx-curly-newline": "off",
        "no-empty": "off",
        "no-empty-function": "off",
        "@typescript-eslint/no-floating-promises": "warn",
        "import/order": "warn",
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/consistent-type-imports": [
          "warn",
          { "fixStyle": "inline-type-imports" },
        ],
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-import-type-side-effects": "warn",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
          "warn",
          {
            "vars": "all",
            "varsIgnorePattern": "^_",
            "args": "after-used",
            "argsIgnorePattern": "^_",
          },
        ],
        "jsx-a11y/click-events-have-key-events": "off",
        "jsx-a11y/no-autofocus": "off",
        "jsx-a11y/interactive-supports-focus": "off",
        "jsx-a11y/label-has-associated-control": "off",
      },
    },
  ],
}
